unquoteNumbers t
headerText "none"
unlPortDrill ""
amsLSB_MSB nil
upgradeMsgSevWarn ""
useEffectiveCDF nil
amsVerilogHonorSmForLeaf nil
termDirectionMismatch "ignore"
amsScalarInstances t
netlistNoWarn ""
amsmaxErrors "50"
createSpectreCktForExtracted nil
ignorePrintNettype nil
emh_digNetlistFile "digital.v"
amsExpScalingFactor "no"
amsExcludeParams ""
unlAnalogOnly ""
emh_maskLayoutView t
useRunDirNetlistsOnly t
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" ""))
upgradeMsgSevError ""
netClashFormat "%b_netclash"
vlogGroundSigs "gnd!"
emh_DigitalInstList nil
allowIllegalIdentifiers "yes"
emh_PrintPwrGndConnectivity nil
instClashFormat "%b_instclash"
allowNameCollisions "yes"
amsVerbose nil
termMismatch "ignore"
runNProcForSch nil
includeInstCdfParams nil
allowDeviantBuses "yes"
vlogSupply1Sigs ""
emh_printEmptySubckt t
amsDefinitionViews "symbol schematic extracted"
allowSparseBuses "yes"
initFile ""
emh_printPhysicalInst nil
vlogSupply0Sigs ""
preferMEOverImplicit t
paramDefVals ""
dnaAssemblerWaitTime 3600
templateFile ""
ossEscNameMapping t
emh_macroLibList ""
enablePkgImport nil
hnlVerilogTermSyncUp nil
paramGlobalDefVal "0"
amsTraverseConfigForTextViews t
emh_phyCell ""
allDspfFiles nil
useDefparam nil
updateShadow nil
dspfFile nil
aliasInstFormat "ams_alias_inst_%i"
checkForMissingShadows nil
includeFiles "disciplines.vams userDisciplines.vams"
iterInstExpFormat "%b_%i"
amsTempDirForShadows ""
shortInstanceList ""
splitNetlistFormat nil
modifyParamScope "no"
amsPortConnectionByNameOrOrder "name"
ifdefLanguageExtensions nil
useUselibForSpice nil
forceCleanTempDirForShadow nil
useFileUselib t
netlistMaxWarn2331 3
verboseShadowLog nil
print_control_vars t
netlistMaxWarn ""
templateScript ""
useSpectreInfo "spectre veriloga spice"
desVarsToBeNetlistedAsInt ""
